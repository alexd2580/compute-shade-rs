#version 450

layout(local_size_x = 8, local_size_y = 8) in;

layout(rgba32f, set=0, binding = 6) uniform image2D intermediate;
layout(rgba32f, set=0, binding = 9) uniform image2D bloom_hv;
layout(rgba32f, set=0, binding = 10) uniform image2D present;

void main() {
    ivec2 iimage_size = ivec2(gl_NumWorkGroups.xy * gl_WorkGroupSize.xy);
    ivec2 ipixel = ivec2(gl_GlobalInvocationID.xy);

    vec3 color = imageLoad(intermediate, ipixel).rgb;
    vec3 bloom = imageLoad(bloom_hv, ipixel).rgb;

    // additive blending
    // color += bloom;

    // // tone mapping
    // float exposure = 1.0;
    // vec3 result = vec3(1.0) - exp(-color * exposure);

    // // also gamma correct while we're at it
    // const float gamma = 2.2;
    // result = pow(result, vec3(1.0 / gamma));

    imageStore(present, ipixel, vec4(color + bloom, 1));
}
